[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry]
authors = ["Ludeeus <ludeeus@ludeeus.dev>"]
classifiers = [
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
exclude = ['**/__pycache__']
include = ["pytraccar", "pytraccar.*", "LICENCE.md"]
license = "MIT"
description = ""
maintainers = ["Ludeeus <ludeeus@ludeeus.dev>"]
name = "pytraccar"
readme = "README.md"
repository = "https://github.com/ludeeus/pytraccar"
version = "0"

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = "^3.6"

[tool.poetry.dev-dependencies]
codespell = "2.2.6"
coverage = {version = "7.4.1", extras = ["toml"]}
mypy = "1.8.0"
pre-commit = "3.6.0"
pre-commit-hooks = "4.5.0"
pytest = "7.4.4"
pytest-asyncio = "0.23.4"
pytest-cov = "4.1.0"
ruff = "0.2.1"
safety = "3.0.1"

[tool.coverage.run]
source = ["pytraccar"]

[tool.coverage.report]
skip_covered = false
fail_under = 100
exclude_lines = [
  "^\\s*if (False|TYPE_CHECKING):"
]

[tool.mypy]
platform = "linux"
python_version = "3.11"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true

[tool.pytest]
asyncio_mode = "strict"

[tool.ruff.lint]
ignore = [
  "ANN101",
  "ANN401",
  "BLE00",
  "COM812",
  "D203",
  "D213",
  "EM101",
  "EM102",
  "ISC001",
  "N818",
  "PLR0913",
  "PLR2004",
  "TRY301",
  "TRY003",
]

select = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["pytraccar"]

[tool.ruff.lint.mccabe]
max-complexity = 10
